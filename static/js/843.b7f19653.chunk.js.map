{"version":3,"file":"static/js/843.b7f19653.chunk.js","mappings":"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","sources":["api.js","components/FilmList/FilmList.styled.js","components/FilmList/FilmList.js","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.js","pages/Movies/Movies.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n// const KEY = '2e84a3ac834b739d0dd29a1e9937557'\nconst KEY = '2e84a3ac834b739d0dd29a1e99375572'\n\nexport const getTrendingFilms = async () => {\n    const response = await axios.get(`${BASE_URL}trending/all/day?api_key=${KEY}`);\n    const result = response.data.results;\n    console.log(result)\n    return result;\n};\nexport const getFilms = async (query) => {\n    const response = await axios.get(`${BASE_URL}search/movie?api_key=${KEY}&query=${query}&page=1`);\n    const result = response.data.results;\n    console.log(result)\n    return result;\n};\nexport const getFilmById = async (movieId) => {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}?api_key=${KEY}&language=en-US`);\n    const result = response.data;\n    //  const result = response.data.genres.map(genre=>genre.name);\n    console.log(result)\n    return result;\n};\nexport const getFilmGenres = async (movieId) => {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}?api_key=${KEY}&language=en-US`);\n    const result = response.data.genres.map(genre=>genre.name);\n    console.log(result)\n    return result;\n};\nexport const getFilmCast = async (movieId) => {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`);\n    const result = response.data.cast;\n    console.log(result)\n    return result;\n};\nexport const getFilmReviews = async (movieId) => {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US`);\n    const result = response.data.results;\n    console.log(result)\n    return result;\n};\n\n\n\n\n\n\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 10px;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  }\n`;\n\nexport const ListItem = styled.li`\n  list-style:none;\n`;\n","// import { Link } from \"react-router-dom\";\nimport { Container, Img,ListItem } from \"./FilmList.styled\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nconst FilmList = ({ films }) => {\n  const location = useLocation();\n  return (\n    <Container>\n      {films.map((film) => (\n                    <div key={film.id}\n        > {<ListItem><Link to={`/movies/${film.id}`} state={{ from: location }}>\n            <Img src={`https://image.tmdb.org/t/p/w500/${film.poster_path}`} alt={film.title} />\n            {film.title || film.name}\n          </Link>\n        </ListItem>}</div>\n                ))}\n    </Container>\n  );\n};\n\nexport default FilmList;\n\n   FilmList.propTypes = {\n    films: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        title: PropTypes.string,\n        name:PropTypes.string,\n        }).isRequired).isRequired,\n    }\n","import styled from \"styled-components\";\n// import { HiSearch } from \"react-icons/hi\";\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const SearchForm = styled.form`\ndisplay: flex;\nalign-items: center;\nwidth: 100%;\nmax-width: 600px;\nbackground-color: #fff;\nborder-radius: 3px;\noverflow: hidden;\n`;\nexport const Button = styled.button`\ndisplay: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n`;","import { Wrapper, Input, SearchForm, Button } from \"./SearchBox.styled\";\nimport PropTypes from 'prop-types';\nimport { useState  } from 'react';\n\nexport const SearchBox = (props) => {\n   const [query, setQuery] = useState('');\n\n  const handleChange = (e) => {\n    setQuery(e.currentTarget.value );\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit(query);\n    };\n\n\n    return (\n      <Wrapper>\n      <SearchForm onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          value={query}\n          onChange={handleChange}\n        />\n        <Button type=\"submit\">Искать</Button>\n      </SearchForm>\n      </Wrapper>\n    );\n\n};\n\n  SearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n  }\n","import { useState, useEffect,useCallback  } from 'react';\nimport { useSearchParams } from \"react-router-dom\";\nimport  FilmList  from \"../../components/FilmList/FilmList\";\nimport { SearchBox } from \"../../components/SearchBox/SearchBox\";\nimport { getFilms } from \"api\";\n\n\nconst Movies = () => {\n  const [films, setFilms] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filmName = searchParams.get(\"query\") ?? \"\";\n\n\n  const updateQueryString = (query) => {\n      const nextParams = query !== \"\" ? { query } : {};      \n      setSearchParams(nextParams);\n  };\n  const fetchFilms = useCallback(async () => {\n  try {\n    setIsLoading(true);\n    const films = await getFilms(filmName);\n    setFilms(films);\n  } catch {\n    setError('Failed to load films :(');\n  } finally {\n    setIsLoading(false);   \n  }\n}, [filmName]);\n\n  \n  useEffect(() => {\n  filmName &&  fetchFilms();\n}, [fetchFilms,filmName]);\n\n  return (\n   <main>\n      <SearchBox onSubmit={updateQueryString}/>\n      {!isLoading ?(!error ? <FilmList films={films} />:<div>{error}</div>)\n        : <div>Is loading</div>}\n      </main>\n  );\n};\n\n\nexport default Movies;"],"names":["BASE_URL","KEY","getTrendingFilms","axios","response","result","data","results","console","log","getFilms","query","getFilmById","movieId","getFilmGenres","genres","map","genre","name","getFilmCast","cast","getFilmReviews","Container","styled","Img","ListItem","films","location","useLocation","film","to","id","state","from","src","poster_path","alt","title","Wrapper","Input","SearchForm","Button","SearchBox","props","useState","setQuery","onSubmit","e","preventDefault","type","value","onChange","currentTarget","setFilms","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","filmName","get","fetchFilms","useCallback","useEffect","FilmList"],"sourceRoot":""}