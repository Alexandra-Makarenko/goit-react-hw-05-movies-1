{"version":3,"file":"static/js/338.64d211d8.chunk.js","mappings":"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","sources":["api.js","components/GoBackBtn/GoBackBtn.js","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n// const KEY = '2e84a3ac834b739d0dd29a1e9937557'\nconst KEY = '2e84a3ac834b739d0dd29a1e99375572'\n\nexport const getTrendingFilms = async () => {\n    const response = await axios.get(`${BASE_URL}trending/all/day?api_key=${KEY}`);\n    const result = response.data.results;\n    console.log(result)\n    return result;\n};\nexport const getFilms = async (query) => {\n    const response = await axios.get(`${BASE_URL}search/movie?api_key=${KEY}&query=${query}&page=1`);\n    const result = response.data.results;\n    console.log(result)\n    return result;\n};\nexport const getFilmById = async (movieId) => {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}?api_key=${KEY}&language=en-US`);\n    const result = response.data;\n    //  const result = response.data.genres.map(genre=>genre.name);\n    console.log(result)\n    return result;\n};\nexport const getFilmGenres = async (movieId) => {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}?api_key=${KEY}&language=en-US`);\n    const result = response.data.genres.map(genre=>genre.name);\n    console.log(result)\n    return result;\n};\nexport const getFilmCast = async (movieId) => {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`);\n    const result = response.data.cast;\n    console.log(result)\n    return result;\n};\nexport const getFilmReviews = async (movieId) => {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US`);\n    const result = response.data.results;\n    console.log(result)\n    return result;\n};\n\n\n\n\n\n\n","import { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nexport const GoBackBtn = ({ link }) => {\n  return (\n    <div>\n     <Link to={link}>Go Back</Link>\n    </div>\n  );\n};\n\nGoBackBtn.propTypes = {\n    link: PropTypes.object.isRequired,\n    }\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: block;\n`;\n\nexport const FilmBox = styled.div`\n   display:flex;\n   gap:20px;\n  }\n`;\n\nexport const ListItem = styled.li`\n  list-style:none;\n`;\n","import { useState, useEffect, useCallback,Suspense } from 'react';\nimport { useParams,Link, Outlet,useLocation } from \"react-router-dom\";\nimport { getFilmById,getFilmGenres } from \"api\";\nimport { GoBackBtn } from \"../GoBackBtn/GoBackBtn\";\nimport { Container, FilmBox } from \"./MovieDetails.styled\";\n\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [film, setFilm] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n\n   const fetchFilms = useCallback(async () => {\n  try {\n    setIsLoading(true);\n    const film = await getFilmById(movieId);\n    const genres = await getFilmGenres(movieId);\n    setFilm(film);\n    setGenres(genres);\n  } catch {\n    setError('Failed to load film :(');\n  } finally {\n    setIsLoading(false);   \n  }\n}, [movieId]);\n\nuseEffect(() => {\n    fetchFilms();\n}, [fetchFilms]);\n  \n\n\n  \n    return (\n    <main>\n      <GoBackBtn link={location.state?.from ?? '/movies'} />\n        {!isLoading ? <div>\n          <h2>{film.title || film.name}</h2>  \n          <FilmBox>                \n          <img src={`https://image.tmdb.org/t/p/w500/${film.poster_path}`} alt={film.title} />\n            {!error ?<Container>\n              <h2>Overview</h2>\n              <p>{film.overview}</p>           \n              <h2>User score</h2>\n              <p>{film.popularity}</p>\n              <h2>Genres</h2>          \n              {genres.map((genre) => (\n                    <div key={genre}\n                > {<li>{genre}</li>}\n                </div>\n                ))}           \n            </Container> : <div>{error}</div>}\n          </FilmBox>\n         <ul>\n        <li>\n          <Link to=\"cast\" state={{from:location.state?.from ?? '/movies'}}>Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{from:location.state?.from ?? '/movies'}}>Reviews</Link>\n        </li>\n        </ul>\n        <Suspense fallback={<div>Loading subpage...</div>}>\n          <Outlet />\n        </Suspense>   \n      </div>\n          : <div>Loading information...</div>}\n        \n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","KEY","getTrendingFilms","axios","response","result","data","results","console","log","getFilms","query","getFilmById","movieId","getFilmGenres","genres","map","genre","name","getFilmCast","cast","getFilmReviews","GoBackBtn","link","to","Container","styled","FilmBox","useParams","useState","film","setFilm","setGenres","isLoading","setIsLoading","error","setError","location","useLocation","fetchFilms","useCallback","useEffect","state","from","title","src","poster_path","alt","overview","popularity","Suspense","fallback"],"sourceRoot":""}